% NOTES: WR switch
% Benoit RAT
% 22 May. 2012


WR Switch HDL
===========

Setup 
----------------

You need to setup the following tools:

* git
* hdlmake
* xilinx ise
* lm32 cross compiler

You should look at the guide [ohwr_development.pdf](ohwr_development.pdf) to install all these tools


### wr-switch-hdl

Get the latest version from git: 

	$ git clone git://ohwr.org/white-rabbit/wr-switch-hdl.git



Compile RT
----------------

Setup the *CROSS_COMPILE* variable

	$ export CROSS_COMPILE="/opt/cc/lm32/bin/lm32-elf-";

Then execute `make` in *wr-switch-hdl/rt*.


Make and EDK bitstream loadable from ARM:
--------------------------------------

If you need to use Xilinx EDK to create a bitstream, you need to set it loadable from ARM. 

In order to do this you need to go in EDK to `Project Files > Bitgen files (etc/bitgen.ut)`

And then add the following:

~~~~~~
-g TdoPin:PULLNONE
-g StartUpClk:CClk
#add other options here.
-d
-g Binary:yes
-g CRC:Enable
-g ConfigRate:50
-g UnusedPin:PullDown
-g DONE_cycle:4
-g GTS_cycle:5
-g GWE_cycle:6
~~~~~~~~~~~




WR Switch SW
=============


Setup development enviroment
-------------------------------

In order to run the switch in development environment[^1] you need to setup

* dhcp server
* tftp server
* nfs server

here a small tutorial[^2] that show you a simple way to install of these package. 

[^1]:The development environment use Ubuntu LTS 12.04
[^2]:In this tutorial we have used the LAN 192.168.7.0/24, you can change it to the desired value.

### DHCP + TFTP: dnsmask package

An easy way to setup DHCP & TFTP server is given by the package dnsmasq[^3] :

	$ sudo apt-get install dnsmasq
	
[^3]: Dnsmasq only permit to install a tftp server in read mode (write is not allowed)
	
then, you must open the file `/etc/dnsmasq.conf` and edit the following lines:

~~~~~~{.bash}
# specified interfaces
interface=eth0
# Dhcp range
dhcp-range=192.168.7.2,192.168.7.15,12h
# Enable dnsmasq's built-in TFTP server
enable-tftp
# Set the root directory for files availble via FTP.
tftp-root=/tftpboot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Once you have saved the file, you just need to restart the service

	$ sudo service dnsmasq restart
	
	
### NFS Server

First install the packages

	$ sudo apt-get install nfs-kernel-server nfs-common

Then edit the file `/etc/exports` and add:

	/tftpboot 192.168.7.0/24(rw,no_root_squash,subtree_check)


Barebox
--------------------------

Here an example how partition should work.

* Mark the first partition with the partition ID “53” and copy the bootlets into this partition (currently not part of @b barebox!).
* Copy the default @b barebox environment into the second partition (no filesystem required).
* Copy the kernel into the third partition (no filesystem required).
* Create the root filesystem in the 4th partition. You may copy an image into this partition or you can do it in the classic way: mkfs on it, mount it and copy all required data and programs into it.
	
Flashing NAND
----------------------------

# Convert RootFS to JFFS2

To convert your rootfs to a jffs2 image you need to install `mtd-utils`

	$ sudo apt-get install mtd-utils
	
And then you need to run:

	$ mkfs.jffs2 --little-endian --eraseblock=0x20000 -n --pad -d ./rootfs -o jffs2-root.img
	
	
# Flashing from the switch

	You need to erase both flash partition, and then write (with padding) the image.

	flash_eraseall /dev/mtd0
	nandwrite --pad /dev/mtd0 /zImage-usb 
	flash_eraseall /dev/mtd1
	nandwrite --pad /dev/mtd1 /jffs2-root.img
	
	

FAQ
----------


### Problems with CP2102x USB to TTL: 

In case you have problems to TX to the UART with the USB cp2102 chip you should not use minicom but tinyserial: http://brokestream.com/tinyserial.html
You can also disable hardware flow control.

	Ctrl+A, O > Serial Port Setup > F


