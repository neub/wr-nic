-- -*- Mode: LUA; tab-width: 2 -*-
-- White-Rabbit dio spec
-- author: JDiaz <jdiaz@atc.ugr.es>
--
-- Use wbgen2 to generate code, documentation and more.
-- wbgen2 is available at:
-- http://www.ohwr.org/projects/wishbone-gen
--
peripheral {
	 name = "FMC-DIO-5chttla",
   description = "This core for adding timing information to a standard GPIO based on WR-CORE information. \
   \
   Operation \
   ~~~~~~~~~~ \
  The registers used on this module allows to time-stamping input values, generate and immediate output or programmed output at a given time.  \
\
      * Programmable output: Use seconds and cycles registers for specify trigger time for each channel. Strobe signal is mandatory to latch these values otherwise no output will be generated. \
      * Immediate output could be generate by making active the corresponding bits of the 'Pulse generate immediately' register. \
      * Pulse length can be adjusted by writing a integer value at corresponding registers. The duration will be its value x 8 ns. \
      * There are some few clock cycles that the system is not ready to latch new time information to triggers. This could be checked by checking dio trigger signals. In addition to pooling, interrupts are generated. Note that because is no ready time is about 200 ns, it would almost always available for the PC. \
     * To activate programmable or immediate output generation, please remember to set corresponding bits of the output configuration registers. Otherwise this system behaves as normal GPIO without additional timing features. \
     * FIFOs store seconds and cycles values of time-stamped events. Note that the FIFO depth is 256 and that output generated signals will be also stored in the FIFOs in the same why that external input do. \
     * Interrupts are handle based on EIC registers. FIFOs not empty as well as ready signals of each GPIO are the interrupt sources. \
\
   Todo \
   ~~~~ \
      * Improve documentation. \
\
   Known issues \
   ~~~~~~~~~~~ \
      * None";

   prefix="dio";

	 hdl_entity="wrsw_dio_wb";

----------------------------------------------------
-- FIFOS & INTERRUPTS FOR INPUT EVENT TIME STAMPING
----------------------------------------------------
	 
-- CHANNEL 0 INPUT FIFO

	 fifo_reg {
			size = 256; -- or more. We'll see :)
			direction = CORE_TO_BUS;
			prefix = "tsf0";
			name = "Timestamp FIFO 0";
			description = "This FIFO holds the DIO input timestamps for each input channel. Each entry contains a single timestamp value consisting of 2 numbers:\
			               - tag_seconds - seconds time\
            				 - tag_cycles  - counter value for sub-second accuracy";

			flags_bus = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT};
			flags_dev = {FIFO_FULL, FIFO_EMPTY};
			
			field {
				 name = "seconds time";
				 descritpion = "seconds time (LSB)";
				 prefix = "tag_seconds";
				 type = SLV;
				 size = 32;
			};

			field {
				 name = "seconds time H";
				 descritpion = "time in seconds (MSB)";
				 prefix = "tag_secondsH";
				 type = SLV;
				 size = 8;
			};

			field {
				 name = "Sub-second accuracy";
				 descritpion = "Sub-second accuracy based on systme clock counters";
				 prefix = "tag_cycles";
				 type = SLV;
				 size = 28;
			};
		
	};

-- CHANNEL 0 INTERRUPTS
	irq {
		 name = "dio fifo not-empty 0";
		 description = "Interrupt active when dio input FIFO contains any timestamps.";
		 prefix = "nempty_0";
		 trigger = LEVEL_1;
	};

-- CHANNEL 1 INPUT FIFO

	 fifo_reg {
			size = 256; -- or more. We'll see :)
			direction = CORE_TO_BUS;
			prefix = "tsf1";
			name = "Timestamp FIFO 1";
			description = "This FIFO holds the DIO input timestamps for each input channel. Each entry contains a single timestamp value consisting of 2 numbers:\
			               - tag_seconds - time in seconds\
            				 - tag_cycles  - counter value for sub-second accuracy";

			flags_bus = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT};
			flags_dev = {FIFO_FULL, FIFO_EMPTY};
			
			field {
				 name = "seconds time";
				 descritpion = "time in seconds (LSB)";
				 prefix = "tag_seconds";
				 type = SLV;
				 size = 32;
			};

			field {
				 name = "seconds time H";
				 descritpion = "time in seconds (MSB)";
				 prefix = "tag_secondsH";
				 type = SLV;
				 size = 8;
			};

			field {
				 name = "Sub-second accuracy";
				 descritpion = "Sub-second accuracy based on systme clock counters";
				 prefix = "tag_cycles";
				 type = SLV;
				 size = 28;
			};
		
	};

-- CHANNEL 1 INTERRUPTS
	irq {
		 name = "dio fifo not-empty 1";
		 description = "Interrupt active when dio input FIFO contains any timestamps.";
		 prefix = "nempty_1";
		 trigger = LEVEL_1;
	};

-- CHANNEL 2 INPUT FIFO

	 fifo_reg {
			size = 256; -- or more. We'll see :)
			direction = CORE_TO_BUS;
			prefix = "tsf2";
			name = "Timestamp FIFO 2";
			description = "This FIFO holds the DIO input timestamps for each input channel. Each entry contains a single timestamp value consisting of 2 numbers:\
			               - tag_seconds - time in seconds\
            				 - tag_cycles  - counter value for sub-second accuracy";

			flags_bus = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT};
			flags_dev = {FIFO_FULL, FIFO_EMPTY};
			
			field {
				 name = "seconds time";
				 descritpion = "time in seconds (LSB)";
				 prefix = "tag_seconds";
				 type = SLV;
				 size = 32;
			};

			field {
				 name = "seconds time H";
				 descritpion = "time in seconds (MSB)";
				 prefix = "tag_secondsH";
				 type = SLV;
				 size = 8;
			};

			field {
				 name = "Sub-second accuracy";
				 descritpion = "Sub-second accuracy based on systme clock counters";
				 prefix = "tag_cycles";
				 type = SLV;
				 size = 28;
			};
		
	};

-- CHANNEL 2 INTERRUPTS
	irq {
		 name = "dio fifo not-empty 2";
		 description = "Interrupt active when dio input FIFO contains any timestamps.";
		 prefix = "nempty_2";
		 trigger = LEVEL_1;
	};

-- CHANNEL 3 INPUT FIFO

	 fifo_reg {
			size = 256; -- or more. We'll see :)
			direction = CORE_TO_BUS;
			prefix = "tsf3";
			name = "Timestamp FIFO 3";
			description = "This FIFO holds the DIO input timestamps for each input channel. Each entry contains a single timestamp value consisting of 2 numbers:\
			               - tag_seconds - time in seconds\
            				 - tag_cycles  - counter value for sub-second accuracy";

			flags_bus = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT};
			flags_dev = {FIFO_FULL, FIFO_EMPTY};
			
			field {
				 name = "seconds time";
				 descritpion = "time in seconds (LSB)";
				 prefix = "tag_seconds";
				 type = SLV;
				 size = 32;
			};

			field {
				 name = "seconds time H";
				 descritpion = "time in seconds (MSB)";
				 prefix = "tag_secondsH";
				 type = SLV;
				 size = 8;
			};

			field {
				 name = "Sub-second accuracy";
				 descritpion = "Sub-second accuracy based on systme clock counters";
				 prefix = "tag_cycles";
				 type = SLV;
				 size = 28;
			};
		
	};

-- CHANNEL 3 INTERRUPTS
	irq {
		 name = "dio fifo not-empty 3";
		 description = "Interrupt active when dio input FIFO contains any timestamps.";
		 prefix = "nempty_3";
		 trigger = LEVEL_1;
	};

-- CHANNEL 4 INPUT FIFO

	 fifo_reg {
			size = 256; -- or more. We'll see :)
			direction = CORE_TO_BUS;
			prefix = "tsf4";
			name = "Timestamp FIFO 4";
			description = "This FIFO holds the DIO input timestamps for each input channel. Each entry contains a single timestamp value consisting of 2 numbers:\
			               - tag_seconds - time in seconds\
            				 - tag_cycles  - counter value for sub-second accuracy";

			flags_bus = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT};
			flags_dev = {FIFO_FULL, FIFO_EMPTY};
			
			field {
				 name = "seconds time";
				 descritpion = "time in seconds (LSB)";
				 prefix = "tag_seconds";
				 type = SLV;
				 size = 32;
			};

			field {
				 name = "seconds time H";
				 descritpion = "time in seconds (MSB)";
				 prefix = "tag_secondsH";
				 type = SLV;
				 size = 8;
			};

			field {
				 name = "Sub-second accuracy";
				 descritpion = "Sub-second accuracy based on systme clock counters";
				 prefix = "tag_cycles";
				 type = SLV;
				 size = 28;
			};
		
	};

-- CHANNEL 4 INTERRUPTS
	irq {
		 name = "dio fifo not-empty 4";
		 description = "Interrupt active when dio input FIFO contains any timestamps.";
		 prefix = "nempty_4";
		 trigger = LEVEL_1;
	};

-------------------------------------------------
-- REGISTERS FOR OUTPUT EVENT TIME-BASED TRIGGER
-------------------------------------------------

-- DIO CHANNEL 0: seconds value . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 0 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (LSB).";
		prefix = "trig0";

		field {
			name = "seconds field";
			description = "TBD";
			prefix = "seconds";
			type = SLV;
			size = 32;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

	reg {
		name = "fmc-dio 0 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (MSB).";
		prefix = "trigH0";

		field {
			name = "seconds field";
			description = "Number of seconds";
			prefix = "seconds";
			type = SLV;
			size = 8; 
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 0: Cycles value. Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 0 cycles to  trigger a pulse generation";
		description = "sub-second accuracy values (clock cycles)  to trigger dio output channels.";
		prefix = "cyc0";

		field {
			name = "cycles field";
			description = "Number of cycles in one second (depends on current clock frequency)";
			prefix = "cyc";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

-- DIO CHANNEL 1: seconds value . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 1 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (LSB).";
		prefix = "trig1";

		field {
			name = "seconds field";
			description = "TBD";
			prefix = "seconds";
			type = SLV;
			size = 32;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

	reg {
		name = "fmc-dio 1 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (MSB).";
		prefix = "trigH1";

		field {
			name = "seconds field";
			description = "Number of seconds";
			prefix = "seconds";
			type = SLV;
			size = 8; 
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 1: Cycles value. Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 1 cycles to  trigger a pulse generation";
		description = "sub-second accuracy values (clock cycles)  to trigger dio output channels.";
		prefix = "cyc1";

		field {
			name = "cycles field";
			description = "Number of cycles in one second (depends on current clock frequency)";
			prefix = "cyc";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

-- DIO CHANNEL 2: seconds value . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 2 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (LSB).";
		prefix = "trig2";

		field {
			name = "seconds field";
			description = "TBD";
			prefix = "seconds";
			type = SLV;
			size = 32;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

	reg {
		name = "fmc-dio 2 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (MSB).";
		prefix = "trigH2";

		field {
			name = "seconds field";
			description = "Number of seconds";
			prefix = "seconds";
			type = SLV;
			size = 8; 
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 2: Cycles value. Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 2 cycles to  trigger a pulse generation";
		description = "sub-second accuracy values (clock cycles)  to trigger dio output channels.";
		prefix = "cyc2";

		field {
			name = "cycles field";
			description = "Number of cycles in one second (depends on current clock frequency)";
			prefix = "cyc";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

-- DIO CHANNEL 3: seconds value . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 3 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (LSB).";
		prefix = "trig3";

		field {
			name = "seconds field";
			description = "TBD";
			prefix = "seconds";
			type = SLV;
			size = 32;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

	reg {
		name = "fmc-dio 3 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (MSB).";
		prefix = "trigH3";

		field {
			name = "seconds field";
			description = "Number of seconds";
			prefix = "seconds";
			type = SLV;
			size = 8; 
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 3: Cycles value. Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 3 cycles to  trigger a pulse generation";
		description = "sub-second accuracy values (clock cycles)  to trigger dio output channels.";
		prefix = "cyc3";

		field {
			name = "cycles field";
			description = "Number of cycles in one second (depends on current clock frequency)";
			prefix = "cyc";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

-- DIO CHANNEL 4: seconds value . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 4 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (LSB).";
		prefix = "trig4";

		field {
			name = "seconds field";
			description = "TBD";
			prefix = "seconds";
			type = SLV;
			size = 32;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

	reg {
		name = "fmc-dio 4 seconds-based trigger for pulse generation";
		description = "trigger seconds value for dio output (MSB).";
		prefix = "trigH4";

		field {
			name = "seconds field";
			description = "Number of seconds";
			prefix = "seconds";
			type = SLV;
			size = 8; 
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 4: Cycles value. Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio 4 cycles to  trigger a pulse generation";
		description = "sub-second accuracy values (clock cycles)  to trigger dio output channels.";
		prefix = "cyc4";

		field {
			name = "cycles field";
			description = "Number of cycles in one second (depends on current clock frequency)";
			prefix = "cyc";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

-----------------------------------------
-- OUTPUT CONFIGURATION/CONTROL REGISTERS
-----------------------------------------

-- Programmable IO mode selection
	reg {
		name = "FMC-DIO input/output configuration register. ";
		description = "It allows to choose the I/0 mode for each channel. \
			- [0-1]: The two first bit correspond to which signal its connected: 0 (00) GPIO, 1 (01) DIO core, 2 (10) WRPC core, 3 Undefined\
			- [2]: Output Enable Negative (Input enable)\
			- [3]: 50 Ohm termination enable";
		prefix = "iomode";
		field {
			name = "channel0";
			description = "Channel 0";
			prefix = "ch0";
			type = SLV;
			size = 4;
			access_bus = READ_WRITE;
			access_dev = READ_WRITE;
			load = LOAD_EXT;
		};
		field {
			name = "channel1";
			description = "Channel 1";
			prefix = "ch1";
			type = SLV;
			size = 4;
			access_bus = READ_WRITE;
			access_dev = READ_WRITE;
			load = LOAD_EXT;
		};
		field {
			name = "channel2";
			description = "Channel 2";
			prefix = "ch2";
			type = SLV;
			size = 4;
			access_bus = READ_WRITE;
			access_dev = READ_WRITE;
			load = LOAD_EXT;
		};
		field {
			name = "channel3";
			description = "Channel 3";
			prefix = "ch3";
			type = SLV;
			size = 4;
			access_bus = READ_WRITE;
			access_dev = READ_WRITE;
			load = LOAD_EXT;
		};
		field {
			name = "channel4";
			description = "Channel 4: Can be used in clock mode";
			prefix = "ch4";
			type = SLV;
			size = 4;
			access_bus = READ_WRITE;
			access_dev = READ_WRITE;
			load = LOAD_EXT;
		};
	};

-- Single-cycle strobe signal to latch  the second/cycles values of the programamble output
	reg {
		name = "Time-programmable output strobe signal";
		description = "It is used to latch second/cycles values generation just 1 clock cycle output ";
		prefix = "latch";

		field {
			name = "Sincle-cycle strobe";
			description = "It generates a one-clock cycle pulse for programmable time latching";
			prefix = "time_ch0";
			type = MONOSTABLE;
		};
		field {
			name = "Sincle-cycle strobe";
			description = "It generates a one-clock cycle pulse for programmable time latching";
			prefix = "time_ch1";
			type = MONOSTABLE;
		};
		field {
			name = "Sincle-cycle strobe";
			description = "It generates a one-clock cycle pulse for programmable time latching";
			prefix = "time_ch2";
			type = MONOSTABLE;
		};
		field {
			name = "Sincle-cycle strobe";
			description = "It generates a one-clock cycle pulse for programmable time latching";
			prefix = "time_ch3";
			type = MONOSTABLE;
		};
		field {
			name = "Sincle-cycle strobe";
			description = "It generates a one-clock cycle pulse for programmable time latching";
			prefix = "time_ch4";
			type = MONOSTABLE;
		};
	};

-- seconds trigger ready value. Readable-writable the bus, writable from the device.
	reg {
		name = "FMC-DIO time trigger is ready to accept a new trigger generation request";
		description = "ready state, waiting new trigger commands for dio output.";
		prefix = "trig";

		field {
			name = "trig_rdy field";
			description = "TBD";
			prefix = "rdy";
			type = SLV;
			size = 5; 
			access_bus = READ_ONLY;
			access_dev = WRITE_ONLY;
		};
	};

-- DIO CHANNEL 0 trigger ready interrupt
	irq {
		 name = "Channel 0 trigger ready interrupt";
		 description = "Interrupt active when time-programmable output channels accept new time trigger command.";
		 prefix = "trigger_ready_0";
		 trigger = LEVEL_1;
	};
-- DIO CHANNEL 1 trigger ready interrupt
	irq {
		 name = "Channel 1 trigger ready interrupt";
		 description = "Interrupt active when time-programmable output channels accept new time trigger command.";
		 prefix = "trigger_ready_1";
		 trigger = LEVEL_1;
	};
-- DIO CHANNEL 2 trigger ready interrupt
	irq {
		 name = "Channel 2 trigger ready interrupt";
		 description = "Interrupt active when time-programmable output channels accept new time trigger command.";
		 prefix = "trigger_ready_2";
		 trigger = LEVEL_1;
	};
-- DIO CHANNEL 3 trigger ready interrupt
	irq {
		 name = "Channel 3 trigger ready interrupt";
		 description = "Interrupt active when time-programmable output channels accept new time trigger command.";
		 prefix = "trigger_ready_3";
		 trigger = LEVEL_1;
	};
-- DIO CHANNEL 4 trigger ready interrupt
	irq {
		 name = "Channel 4 trigger ready interrupt";
		 description = "Interrupt active when time-programmable output channels accept new time trigger command.";
		 prefix = "trigger_ready_4";
		 trigger = LEVEL_1;
	};

-- DIO CHANNEL 0: Programmable/immediate output pulse length . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio channel 0 Programmable/immediate output pulse length";
		description = "Number of clk_ref clock ticks that output will be active";
		prefix = "prog0_pulse";

		field {
			name = "number of ticks field for channel 0";
			description = "ticks number";
			prefix = "length";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

-- DIO CHANNEL 1: Programmable/immediate output pulse length . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio channel 1 Programmable/immediate output pulse length";
		description = "Number of clk_ref clock ticks that output will be active";
		prefix = "prog1_pulse";

		field {
			name = "number of ticks field for channel 1";
			description = "ticks number";
			prefix = "length";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 2: Programmable/immediate output pulse length . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio channel 2 Programmable/immediate output pulse length";
		description = "Number of clk_ref clock ticks that output will be active";
		prefix = "prog2_pulse";

		field {
			name = "number of ticks field for channel 2";
			description = "ticks number";
			prefix = "length";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 3: Programmable/immediate output pulse length . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio channel 3 Programmable/immediate output pulse length";
		description = "Number of clk_ref clock ticks that output will be active";
		prefix = "prog3_pulse";

		field {
			name = "number of ticks field for channel 3";
			description = "ticks number";
			prefix = "length";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};
-- DIO CHANNEL 4: Programmable/immediate output pulse length . Readable-writable the bus, readble from the device.
	reg {
		name = "fmc-dio channel 4 Programmable/immediate output pulse length";
		description = "Number of clk_ref clock ticks that output will be active";
		prefix = "prog4_pulse";

		field {
			name = "number of ticks field for channel 4";
			description = "ticks number";
			prefix = "length";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};


-----------------------------------------
-- IMMEDIATE OUTPUT REGISTERS
-----------------------------------------

-- Pulse generator.
	reg {
		name = "Pulse generate immediately";
		description = "It is used to generate a pulse immediately";
		prefix = "pulse";

		field {
			name = "pulse_gen_now_0";
			description = "It generates a pulse";
			prefix = "imm_0";
			type = MONOSTABLE;
      clock = "clk_asyn_i";
		};
		field {
			name = "pulse_gen_now_1";
			description = "It generates a pulse";
			prefix = "imm_1";
			type = MONOSTABLE;
      clock = "clk_asyn_i";
		};
		field {
			name = "pulse_gen_now_2";
			description = "It generates a pulse";
			prefix = "imm_2";
			type = MONOSTABLE;
      clock = "clk_asyn_i";
		};
		field {
			name = "pulse_gen_now_3";
			description = "It generates a pulse";
			prefix = "imm_3";
			type = MONOSTABLE;
      clock = "clk_asyn_i";
		};
		field {
			name = "pulse_gen_now_4";
			description = "It generates a pulse";
			prefix = "imm_4";
			type = MONOSTABLE;
      clock = "clk_asyn_i";
			};
	};

};

